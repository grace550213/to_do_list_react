{"version":3,"sources":["components/Headers.js","components/TodosItem.js","components/Todos.js","components/AddTodos.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Headers","handleDeleteDoneTodos","className","onClick","TodosItem","todosItem","handleFinishTodos","handleEditTodos","handleDeleteTodos","handleUpdateNewTitle","useState","newTodosTitle","setNewTodosTitle","clsx","done","isDone","edit","isEditing","onDoubleClick","id","newIsDone","alert","title","type","placeholder","value","onChange","e","target","onKeyDown","event","key","Todos","todos","map","item","AddTodos","inputValue","handleChangeInput","handleAddTodos","active","length","htmlFor","Footer","numberOfRemaining","defaultTodos","uuidv4","App","setTodos","setInputValue","filter","unfinishedTodos","preTodos","status","newTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec4b3593.chunk.js","sourcesContent":["const Headers = ({handleDeleteDoneTodos}) => (\n  <header>\n    <h3>Tasks</h3>\n    <button className=\"btn-reset btn-cleanDone\" onClick={handleDeleteDoneTodos}> 清除已完成項目 </button>\n  </header>\n);\n\nexport default Headers;\n","import clsx from \"clsx\";\nimport { useState } from \"react\";\n\nconst TodosItem = ({\n  todosItem,\n  handleFinishTodos,\n  handleEditTodos,\n  handleDeleteTodos,\n  handleUpdateNewTitle\n}) => {\n  const [newTodosTitle, setNewTodosTitle] = useState(\"\");\n  // 預先判斷是真的要刪除此筆 todos 還是只是從編輯狀態還原成檢視狀態\n  const handleconfirmDelete = (id, isEditing) => {\n    if (isEditing) {\n      handleEditTodos(id, false);\n      return;\n    }\n    handleDeleteTodos(id);\n  };\n  // 預先判斷是否完成，若已完成，則不能編輯\n  const handleConfirmEdit = (id, isDone) => {\n    if (isDone) {\n      return;\n    }\n    handleEditTodos(id, true);\n  };\n  // 改變\"編輯 todos input\"的文字\n  const handleChangeInput = e => {\n    setNewTodosTitle(e.target.value);\n  };\n  // 若按下的為 enter 鍵，則更新新的 todos 的 title\n  const handleConfirmNewTitle = event => {\n    // console.log(event.key);\n    // console.log(todosItem.id, newTodosTitle);\n    if (event.key === \"Enter\" && newTodosTitle === \"\") {\n      alert(\"您未輸入文字\");\n    } else if (event.key === \"Enter\") {\n      handleUpdateNewTitle(todosItem.id, newTodosTitle);\n    }\n  };\n  // 預先確認使用者是否在編輯狀態\n  const handleConfirmFinish = (id, newIsDone, isEditing) => {\n    if (isEditing) {\n      alert(\"您在編輯狀態，無法勾選完成\");\n      return;\n    }\n    handleFinishTodos(id, newIsDone);\n  };\n\n  return (\n    <div\n      className={clsx(\n        \"task-item\",\n        { done: todosItem.isDone },\n        { edit: todosItem.isEditing }\n      )}\n      onDoubleClick={() => handleConfirmEdit(todosItem.id, todosItem.isDone)}\n    >\n      <div\n        className=\"task-item-checked\"\n        onClick={() =>\n          handleConfirmFinish(\n            todosItem.id,\n            !todosItem.isDone,\n            todosItem.isEditing\n          )\n        }\n      >\n        <span className=\"icon icon-checked\"></span>\n      </div>\n      <div className=\"task-item-body\">\n        <span className=\"task-item-body-text\">{todosItem.title}</span>\n        <input\n          className=\"task-item-body-input\"\n          type=\"text\"\n          placeholder=\"新增工作\"\n          value={newTodosTitle}\n          onChange={handleChangeInput}\n          onKeyDown={handleConfirmNewTitle}\n        />\n      </div>\n      <div\n        className=\"task-item-action\"\n        onClick={() => handleconfirmDelete(todosItem.id, todosItem.isEditing)}\n      >\n        <button className=\"btn-reset btn-destroy icon\"> </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TodosItem;\n","import TodosItem from \"./TodosItem\";\n\nconst Todos = ({\n  todos,\n  handleFinishTodos,\n  handleEditTodos,\n  handleDeleteTodos,\n  handleUpdateNewTitle\n}) => {\n  return (\n    <div className=\"todos\">\n      {todos.map(item => {\n        return (\n          <TodosItem\n            todosItem={item}\n            handleFinishTodos={handleFinishTodos}\n            handleEditTodos={handleEditTodos}\n            handleDeleteTodos={handleDeleteTodos}\n            handleUpdateNewTitle={handleUpdateNewTitle}\n            key={item.id}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Todos;\n","import clsx from \"clsx\";\n\nconst AddTodos = ({ inputValue, handleChangeInput, handleAddTodos }) => (\n  <div className={clsx(\"add-todo\", { active: inputValue.length > 0 })}>\n    <label className=\"add-todo-icon icon\" htmlFor=\"add-todo-input\"></label>\n    <div className=\"add-todo-input\">\n      <input\n        id=\"add-todo-input\"\n        type=\"text\"\n        placeholder=\"新增工作\"\n        value={inputValue}\n        onChange={handleChangeInput}\n      />\n    </div>\n    <div className=\"add-todo-action\" onClick={handleAddTodos}>\n      <button className=\"btn-reset btn-add\"> 新增 </button>\n    </div>\n  </div>\n);\n\nexport default AddTodos;\n","const Footer = ({ numberOfRemaining }) => (\n  <footer>\n    <p>剩餘項目: {numberOfRemaining}</p>\n  </footer>\n);\n\nexport default Footer;\n","import \"./App.scss\";\nimport Headers from \"./components/Headers\";\nimport Todos from \"./components/Todos\";\nimport AddTodos from \"./components/AddTodos\";\nimport Footer from \"./components/Footer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\n\nconst defaultTodos = [\n  {\n    id: uuidv4(),\n    title: \"打籃球\",\n    isDone: true,\n    isEditing: false\n  },\n  {\n    id: uuidv4(),\n    title: \"吃美食\",\n    isDone: false,\n    isEditing: false\n  },\n  {\n    id: uuidv4(),\n    title: \"繳電話費\",\n    isDone: false,\n    isEditing: false\n  }\n];\n\nfunction App() {\n  const [todos, setTodos] = useState(defaultTodos);\n  const [inputValue, setInputValue] = useState(\"\");\n  // 剩餘 todolist 項目的數量\n  const numberOfRemaining = todos.filter(item => !item.isDone).length;\n  // 改變\"新增 input\"的文字\n  const handleChangeInput = e => {\n    setInputValue(e.target.value);\n  };\n  // 新增 todolist 的項目\n  const handleAddTodos = () => {\n    setTodos(preTodos => {\n      return [\n        ...preTodos,\n        {\n          id: uuidv4(),\n          title: inputValue,\n          isDone: false,\n          isEditing: false\n        }\n      ];\n    });\n    setInputValue(\"\");\n  };\n  // 清除已完成項目\n  const handleDeleteDoneTodos = () => {\n    const unfinishedTodos = todos.filter(item => !item.isDone);\n    setTodos(unfinishedTodos);\n  };\n  // 勾選完成或取消勾選完成 todos 的項目\n  const handleFinishTodos = (id, status) => {\n    const newTodos = todos.map(item => {\n      if (item.id === id) {\n        item.isDone = status;\n      }\n      return item;\n    });\n    setTodos(newTodos);\n  };\n  // 編輯或取消編輯 todolist 的項目\n  const handleEditTodos = (id,status) => {\n    const newTodos = todos.map(item => {\n      if (item.id === id) {\n        item.isEditing = status;\n      }\n      return item;\n    });\n    setTodos(newTodos);\n  };\n  // 刪除 todolist 的項目\n  const handleDeleteTodos = id => {\n    const newTodos = todos.filter(item => item.id !== id);\n    setTodos(newTodos);\n  };\n  // 更新新的 todos 項目的 title\n  const handleUpdateNewTitle = (id, title) => {\n    const newTodos = todos.map(item => {\n      if (item.id === id) {\n        item.title = title;\n        item.isEditing = false;\n      }\n      return item;\n    });\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <Headers handleDeleteDoneTodos={handleDeleteDoneTodos} />\n      <AddTodos\n        inputValue={inputValue}\n        handleChangeInput={handleChangeInput}\n        handleAddTodos={handleAddTodos}\n      />\n      <Todos\n        todos={todos}\n        handleFinishTodos={handleFinishTodos}\n        handleEditTodos={handleEditTodos}\n        handleDeleteTodos={handleDeleteTodos}\n        handleUpdateNewTitle={handleUpdateNewTitle}\n      />\n      <Footer numberOfRemaining={numberOfRemaining} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
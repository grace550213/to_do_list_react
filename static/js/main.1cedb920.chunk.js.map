{"version":3,"sources":["redux/todos/todosTypes.js","components/Headers.js","redux/todos/todosActions.js","components/TodosItem.js","components/Todos.js","components/AddTodos.js","components/Footer.js","App.js","reportWebVitals.js","redux/todos/todosReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["ADD_TODOS","DELETE_DONE_TODOS","FINISH_TODOS","EDIT_TODOS","DELETE_TODOS","UPDATE_NEW_TITLE","connect","dispatch","deleteDoneTodos","type","className","onClick","state","todos","finishTodos","data","payload","editTodos","deleteTodos","id","updateNewTitle","todosItem","useState","newTodosTitle","setNewTodosTitle","clsx","done","isDone","edit","isEditing","onDoubleClick","status","newIsDone","alert","title","placeholder","value","onChange","e","target","onKeyDown","event","key","map","item","addTodos","inputValue","handleChangeInput","setInputValue","active","length","htmlFor","Footer","numberOfRemaining","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","uuidv4","todosReducer","action","newState","JSON","parse","stringify","rootReducer","combineReducers","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cedb920.chunk.js","sourcesContent":["export const ADD_TODOS = 'ADD_TODOS'\r\nexport const DELETE_DONE_TODOS = 'DELETE_DONE_TODOS'\r\nexport const FINISH_TODOS = 'FINISH_TODOS'\r\nexport const EDIT_TODOS = 'EDIT_TODOS'\r\nexport const DELETE_TODOS = 'DELETE_TODOS'\r\nexport const UPDATE_NEW_TITLE = 'UPDATE_NEW_TITLE'","import { connect } from 'react-redux';\r\nimport { deleteDoneTodos } from '../redux';\r\n\r\n// const Headers = ({handleDeleteDoneTodos}) => (\r\nconst Headers = ({ deleteDoneTodos }) => (\r\n  <header>\r\n    <h3>Tasks</h3>\r\n    <button className=\"btn-reset btn-cleanDone\" onClick={deleteDoneTodos}>\r\n      {' '}\r\n      清除已完成項目{' '}\r\n    </button>\r\n  </header>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteDoneTodos: () => dispatch(deleteDoneTodos())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Headers);\r\n// export default Headers;\r\n","import {\r\n  ADD_TODOS,\r\n  DELETE_DONE_TODOS,\r\n  FINISH_TODOS,\r\n  EDIT_TODOS,\r\n  DELETE_TODOS,\r\n  UPDATE_NEW_TITLE\r\n} from './todosTypes';\r\n\r\n// payload=title\r\nexport const addTodos = title => {\r\n  return {\r\n    type: ADD_TODOS,\r\n    payload: title\r\n  }\r\n}\r\n\r\nexport const deleteDoneTodos = () => {\r\n  return {\r\n    type: DELETE_DONE_TODOS,\r\n  }\r\n}\r\n\r\n// payload={id, status}\r\nexport const finishTodos = data => {\r\n  return {\r\n    type: FINISH_TODOS,\r\n    payload: data\r\n  }\r\n}\r\n\r\n// payload={id, status}\r\nexport const editTodos = data => {\r\n  return {\r\n    type: EDIT_TODOS,\r\n    payload: data\r\n  }\r\n}\r\n\r\n// payload=id\r\nexport const deleteTodos = id => {\r\n  return {\r\n    type: DELETE_TODOS,\r\n    payload: id\r\n  }\r\n}\r\n\r\n// payload={id, title}\r\nexport const updateNewTitle = data => {\r\n  return {\r\n    type: UPDATE_NEW_TITLE,\r\n    payload: data\r\n  }\r\n}","import clsx from 'clsx';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { finishTodos, editTodos, deleteTodos, updateNewTitle } from '../redux';\r\n\r\nconst TodosItem = ({\r\n  todosItem,\r\n  finishTodos,\r\n  editTodos,\r\n  deleteTodos,\r\n  updateNewTitle\r\n  // handleFinishTodos,\r\n  // handleEditTodos,\r\n  // handleDeleteTodos,\r\n  // handleUpdateNewTitle\r\n}) => {\r\n  const [newTodosTitle, setNewTodosTitle] = useState('');\r\n  // 預先判斷是真的要刪除此筆 todos 還是只是從編輯狀態還原成檢視狀態\r\n  const handleconfirmDelete = (id, isEditing) => {\r\n    if (isEditing) {\r\n      editTodos({ id, status: false });\r\n      // handleEditTodos(id, false);\r\n      return;\r\n    }\r\n    deleteTodos(id);\r\n    // handleDeleteTodos(id);\r\n  };\r\n  // 預先判斷是否完成，若已完成，則不能編輯\r\n  const handleConfirmEdit = (id, isDone) => {\r\n    if (isDone) {\r\n      return;\r\n    }\r\n    editTodos({ id, status: true });\r\n    // handleEditTodos(id, true);\r\n  };\r\n  // 改變\"編輯 todos input\"的文字\r\n  const handleChangeInput = (e) => {\r\n    setNewTodosTitle(e.target.value);\r\n  };\r\n  // 若按下的為 enter 鍵，則更新新的 todos 的 title\r\n  const handleConfirmNewTitle = (event) => {\r\n    // console.log(event.key);\r\n    // console.log(todosItem.id, newTodosTitle);\r\n    if (event.key === 'Enter' && newTodosTitle === '') {\r\n      alert('您未輸入文字');\r\n    } else if (event.key === 'Enter') {\r\n      updateNewTitle({ id: todosItem.id, title: newTodosTitle });\r\n      // handleUpdateNewTitle(todosItem.id, newTodosTitle);\r\n    }\r\n  };\r\n  // 預先確認使用者是否在編輯狀態\r\n  const handleConfirmFinish = (id, newIsDone, isEditing) => {\r\n    if (isEditing) {\r\n      alert('您在編輯狀態，無法勾選完成');\r\n      return;\r\n    }\r\n    finishTodos({ id, status: newIsDone });\r\n    // handleFinishTodos(id, newIsDone);\r\n  };\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'task-item',\r\n        { done: todosItem.isDone },\r\n        { edit: todosItem.isEditing }\r\n      )}\r\n      onDoubleClick={() => handleConfirmEdit(todosItem.id, todosItem.isDone)}>\r\n      <div\r\n        className=\"task-item-checked\"\r\n        onClick={() =>\r\n          handleConfirmFinish(\r\n            todosItem.id,\r\n            !todosItem.isDone,\r\n            todosItem.isEditing\r\n          )\r\n        }>\r\n        <span className=\"icon icon-checked\"></span>\r\n      </div>\r\n      <div className=\"task-item-body\">\r\n        <span className=\"task-item-body-text\">{todosItem.title}</span>\r\n        <input\r\n          className=\"task-item-body-input\"\r\n          type=\"text\"\r\n          placeholder=\"新增工作\"\r\n          value={newTodosTitle}\r\n          onChange={handleChangeInput}\r\n          onKeyDown={handleConfirmNewTitle}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"task-item-action\"\r\n        onClick={() => handleconfirmDelete(todosItem.id, todosItem.isEditing)}>\r\n        <button className=\"btn-reset btn-destroy icon\"> </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    finishTodos: (data) => dispatch(finishTodos(data)),\r\n    editTodos: (data) => dispatch(editTodos(data)),\r\n    deleteTodos: (id) => dispatch(deleteTodos(id)),\r\n    updateNewTitle: (data) => dispatch(updateNewTitle(data))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosItem);\r\n// export default TodosItem;\r\n","import TodosItem from './TodosItem';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Todos = ({\r\n  todos\r\n  // handleFinishTodos,\r\n  // handleEditTodos,\r\n  // handleDeleteTodos,\r\n  // handleUpdateNewTitle\r\n}) => {\r\n  return (\r\n    <div className=\"todos\">\r\n      {todos.map((item) => {\r\n        return (\r\n          <TodosItem\r\n            todosItem={item}\r\n            // handleFinishTodos={handleFinishTodos}\r\n            // handleEditTodos={handleEditTodos}\r\n            // handleDeleteTodos={handleDeleteTodos}\r\n            // handleUpdateNewTitle={handleUpdateNewTitle}\r\n            key={item.id}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Todos);\r\n// export default Todos;\r\n","import clsx from 'clsx';\r\nimport { connect } from 'react-redux';\r\nimport { addTodos } from '../redux';\r\n\r\n// const AddTodos = ({ inputValue, handleChangeInput, handleAddTodos }) => (\r\nconst AddTodos = ({\r\n  inputValue,\r\n  handleChangeInput,\r\n  addTodos,\r\n  setInputValue\r\n}) => {\r\n  const handleAddTodos = () => {\r\n    addTodos(inputValue);\r\n    setInputValue('');\r\n  };\r\n  return (\r\n    <div className={clsx('add-todo', { active: inputValue.length > 0 })}>\r\n      <label className=\"add-todo-icon icon\" htmlFor=\"add-todo-input\"></label>\r\n      <div className=\"add-todo-input\">\r\n        <input\r\n          id=\"add-todo-input\"\r\n          type=\"text\"\r\n          placeholder=\"新增工作\"\r\n          value={inputValue}\r\n          onChange={handleChangeInput}\r\n        />\r\n      </div>\r\n      {/* <div className=\"add-todo-action\" onClick={handleAddTodos}> */}\r\n      <div className=\"add-todo-action\" onClick={() => handleAddTodos()}>\r\n        <button className=\"btn-reset btn-add\"> 新增 </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodos: (title) => dispatch(addTodos(title))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTodos);\r\n// export default AddTodos;\r\n","const Footer = ({ numberOfRemaining }) => (\r\n  <footer>\r\n    <p>剩餘項目: {numberOfRemaining}</p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import './App.scss';\r\nimport Headers from './components/Headers';\r\nimport Todos from './components/Todos';\r\nimport AddTodos from './components/AddTodos';\r\nimport Footer from './components/Footer';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport { useState } from 'react';\r\n// import { Provider } from 'react-redux';\r\n// import store from './redux/store';\r\nimport { connect } from 'react-redux';\r\n\r\n// const defaultTodos = [\r\n//   {\r\n//     id: uuidv4(),\r\n//     title: '打籃球',\r\n//     isDone: true,\r\n//     isEditing: false\r\n//   },\r\n//   {\r\n//     id: uuidv4(),\r\n//     title: '吃美食',\r\n//     isDone: false,\r\n//     isEditing: false\r\n//   },\r\n//   {\r\n//     id: uuidv4(),\r\n//     title: '繳電話費',\r\n//     isDone: false,\r\n//     isEditing: false\r\n//   }\r\n// ];\r\n\r\nfunction App({ todos }) {\r\n  // const [todos, setTodos] = useState(defaultTodos);\r\n  const [inputValue, setInputValue] = useState('');\r\n  // 剩餘 todolist 項目的數量\r\n  const numberOfRemaining = todos.filter((item) => !item.isDone).length;\r\n  // 改變\"新增 input\"的文字\r\n  const handleChangeInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  // 新增 todolist 的項目\r\n  // const handleAddTodos = () => {\r\n  //   setTodos((preTodos) => {\r\n  //     return [\r\n  //       ...preTodos,\r\n  //       {\r\n  //         id: uuidv4(),\r\n  //         title: inputValue,\r\n  //         isDone: false,\r\n  //         isEditing: false\r\n  //       }\r\n  //     ];\r\n  //   });\r\n  //   setInputValue('');\r\n  // };\r\n  // 清除已完成項目\r\n  // const handleDeleteDoneTodos = () => {\r\n  //   const unfinishedTodos = todos.filter((item) => !item.isDone);\r\n  //   setTodos(unfinishedTodos);\r\n  // };\r\n  // 勾選完成或取消勾選完成 todos 的項目\r\n  // const handleFinishTodos = (id, status) => {\r\n  //   const newTodos = todos.map((item) => {\r\n  //     if (item.id === id) {\r\n  //       item.isDone = status;\r\n  //     }\r\n  //     return item;\r\n  //   });\r\n  //   setTodos(newTodos);\r\n  // };\r\n  // 編輯或取消編輯 todolist 的項目\r\n  // const handleEditTodos = (id, status) => {\r\n  //   const newTodos = todos.map((item) => {\r\n  //     if (item.id === id) {\r\n  //       item.isEditing = status;\r\n  //     }\r\n  //     return item;\r\n  //   });\r\n  //   setTodos(newTodos);\r\n  // };\r\n  // 刪除 todolist 的項目\r\n  // const handleDeleteTodos = (id) => {\r\n  //   const newTodos = todos.filter((item) => item.id !== id);\r\n  //   setTodos(newTodos);\r\n  // };\r\n  // 更新新的 todos 項目的 title\r\n  // const handleUpdateNewTitle = (id, title) => {\r\n  //   const newTodos = todos.map((item) => {\r\n  //     if (item.id === id) {\r\n  //       item.title = title;\r\n  //       item.isEditing = false;\r\n  //     }\r\n  //     return item;\r\n  //   });\r\n  //   setTodos(newTodos);\r\n  // };\r\n\r\n  return (\r\n    // <Provider store={store}>\r\n      <div className=\"app\">\r\n        {/* <Headers handleDeleteDoneTodos={handleDeleteDoneTodos} /> */}\r\n        <Headers />\r\n        <AddTodos\r\n          inputValue={inputValue}\r\n          setInputValue={setInputValue}\r\n          handleChangeInput={handleChangeInput}\r\n          // handleAddTodos={handleAddTodos}\r\n        />\r\n        <Todos\r\n        // todos={todos}\r\n        // handleFinishTodos={handleFinishTodos}\r\n        // handleEditTodos={handleEditTodos}\r\n        // handleDeleteTodos={handleDeleteTodos}\r\n        // handleUpdateNewTitle={handleUpdateNewTitle}\r\n        />\r\n        <Footer numberOfRemaining={numberOfRemaining} />\r\n      </div>\r\n    // </Provider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n// export default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  ADD_TODOS,\r\n  DELETE_DONE_TODOS,\r\n  FINISH_TODOS,\r\n  EDIT_TODOS,\r\n  DELETE_TODOS,\r\n  UPDATE_NEW_TITLE\r\n} from './todosTypes';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst initialState = [\r\n  {\r\n    id: uuidv4(),\r\n    title: '打籃球',\r\n    isDone: true,\r\n    isEditing: false\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    title: '吃美食',\r\n    isDone: false,\r\n    isEditing: false\r\n  },\r\n  {\r\n    id: uuidv4(),\r\n    title: '繳電話費',\r\n    isDone: false,\r\n    isEditing: false\r\n  }\r\n];\r\nconst todosReducer = (state = initialState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    // 新增 todolist 的項目 payload=title\r\n    case ADD_TODOS:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: uuidv4(),\r\n          // title: inputValue,\r\n          title: action.payload,\r\n          isDone: false,\r\n          isEditing: false\r\n        }\r\n      ];\r\n\r\n    // 清除已完成項目\r\n    case DELETE_DONE_TODOS:\r\n      return state.filter((item) => !item.isDone);\r\n\r\n    // 勾選完成或取消勾選完成 todos 的項目 action.payload={id, status}\r\n    case FINISH_TODOS:\r\n      return newState.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          item.isDone = action.payload.status;\r\n        }\r\n        return item;\r\n      });\r\n\r\n    // 編輯或取消編輯 todolist 的項目  action.payload={id, status}\r\n    case EDIT_TODOS:\r\n      return state.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          item.isEditing = action.payload.status;\r\n        }\r\n        return item;\r\n      });\r\n\r\n    // 刪除 todolist 的項目 payload=id\r\n    case DELETE_TODOS:\r\n      return state.filter((item) => item.id !== action.payload);\r\n\r\n    // 更新新的 todos 項目的 title action.payload={id, title}\r\n    case UPDATE_NEW_TITLE:\r\n      return state.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          item.title = action.payload.title;\r\n          item.isEditing = false;\r\n        }\r\n        return item;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n","import { combineReducers } from 'redux'\r\nimport todosReducer from './todos/todosReducer'\r\n// import iceCreamReducer from './iceCream/iceCreamReducer'\r\n// import userReducer from './user/userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  todos: todosReducer,\r\n  // iceCream: iceCreamReducer,\r\n  // user: userReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware } from 'redux';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}